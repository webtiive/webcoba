"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Page;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@mui/material/styles");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PREFIX = 'nineth';
const classes = {
  header: `${PREFIX}-header`,
  img: `${PREFIX}-img`
}; // TODO jss-to-styled codemod: The Fragment root was replaced by div. Change the tag if needed.

const Root = (0, _styles.styled)('div')(({
  theme
}) => ({
  [`& .${classes.header}`]: {
    marginLeft: theme.spacing(5),
    paddingRight: theme.spacing(3),
    marginRight: 'auto',
    minWidth: 400
  },
  [`& .${classes.img}`]: {
    marginTop: theme.spacing(4)
  }
}));

function Page() {
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(Root, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
      className: classes.header
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
      className: classes.img
    })]
  });
}