"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useExportedStyles = exports.default = void 0;

var _clsx = _interopRequireDefault(require("clsx"));

var React = _interopRequireWildcard(require("react"));

var _core = require("@material-ui/core");

var _jsxRuntime = require("react/jsx-runtime");

var _InnerComponent;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const useStyles = (0, _core.makeStyles)(() => ({
  test: {
    backgroundColor: "purple",
    color: "white",
    "&$qualifier": {
      textDecoration: props => props.textDecoration
    }
  },
  qualifier: {}
}));
const useExportedStyles = (0, _core.makeStyles)({
  test: {
    backgroundColor: "purple",
    color: "white"
  }
});
exports.useExportedStyles = useExportedStyles;
const useStyles2 = (0, _core.makeStyles)({
  test2: props => ({
    backgroundColor: "blue",
    color: "lime"
  })
});
const useStyles3 = (0, _core.makeStyles)({
  test3: props => {
    return {
      backgroundColor: "blue",
      color: "lime"
    };
  }
});
const useGlobalStyles = (0, _core.makeStyles)(() => ({
  '@global': {
    '.sample': {
      backgroundColor: "purple",
      color: "white"
    }
  }
}));

function InnerComponent() {
  const classes = useStyles2();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: classes.test2,
    children: "Inner Test"
  });
}

function ComponentUsingStyles(props) {
  const classes = useStyles(props);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: classes.test,
      children: ["Test", _InnerComponent || (_InnerComponent = /*#__PURE__*/(0, _jsxRuntime.jsx)(InnerComponent, {}))]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: (0, _clsx.default)(classes.test, classes.qualifier),
      children: "Qualifier Test"
    })]
  });
}

var _default = useStyles3;
exports.default = _default;